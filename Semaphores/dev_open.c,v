head	1.9;
access;
symbols;
locks
	ravi_raja:1.9; strict;
comment	@ * @;


1.9
date	2016.07.12.04.55.20;	author ravi_raja;	state Exp;
branches;
next	1.8;

1.8
date	2016.07.11.18.36.49;	author ravi_raja;	state Exp;
branches;
next	1.7;

1.7
date	2016.06.24.18.14.33;	author ravi_raja;	state Exp;
branches;
next	1.6;

1.6
date	2016.06.24.14.06.44;	author ravi_raja;	state Exp;
branches;
next	1.5;

1.5
date	2016.06.21.11.25.05;	author ravi_raja;	state Exp;
branches;
next	1.4;

1.4
date	2016.06.21.11.19.27;	author ravi_raja;	state Exp;
branches;
next	1.3;

1.3
date	2016.06.21.11.11.48;	author ravi_raja;	state Exp;
branches;
next	1.2;

1.2
date	2016.06.21.10.44.04;	author ravi_raja;	state Exp;
branches;
next	1.1;

1.1
date	2016.06.21.10.30.07;	author ravi_raja;	state Exp;
branches;
next	;


desc
@Function for opening the file and liniking it through the node on vfs
@


1.9
log
@*** empty log message ***
@
text
@#include"header.h"
#include"declaration.h"

int dev_open(struct inode *inode, struct file *filep)
{
	struct Dev *ldev;
	ldev = quant;
	ldev = container_of(inode->i_cdev, struct Dev, c_dev);
	filep->private_data = ldev;
	printk(KERN_INFO "BEGIN: %s", __func__);
	if((filep->f_flags & O_ACCMODE) == O_WRONLY)
	{
		if(down_interruptible(&ldev->sem))
			return ERESTARTSYS;
		dev_trim(ldev);
		up(&ldev->sem);
	}
	printk(KERN_INFO "END: %s", __func__);
	return 0;
}

@


1.8
log
@Implementing semaphores synchronization technique
@
text
@d14 1
a14 1
			return -ERESTARTSYS;
@


1.7
log
@*** empty log message ***
@
text
@d13 2
d16 1
@


1.6
log
@dev_trim function called
@
text
@a5 1
	printk(KERN_INFO "BEGIN: %s", __func__);
d10 1
@


1.5
log
@*** empty log message ***
@
text
@d6 1
d11 4
a14 1
	printk(KERN_INFO "BEGIN: %s", __func__);
@


1.4
log
@*** empty log message ***
@
text
@a2 1
//#include"fops.h"
@


1.3
log
@fops.h included
@
text
@d3 1
a3 1
#include"fops.h"
@


1.2
log
@error removed
@
text
@d3 1
@


1.1
log
@Initial revision
@
text
@d7 1
a7 1
	ldev = dev;
d12 1
@
